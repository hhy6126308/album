<?php
class RedisModel{
	private   $redis = null;
	private $CMD = array('del',
'dump',
'exists',
'expire',
'expireat',
'keys',
'migrate',
'move',
'object',
'persist',
'pexpire',
'pexpireat',
'pttl',
'randomkey',
'rename',
'renamenx',
'restore',
'sort',
'ttl',
'type',
'scan',
'append',
'bitcount',
'bitop',
'decr',
'decrby',
'get',
'getbit',
'getrange',
'getset',
'incr',
'incrby',
'incrbyfloat',
'mget',
'mset',
'msetnx',
'psetex',
'set',
'setbit',
'setex',
'setnx',
'setrange',
'strlen',
'hdel',
'hexists',
'hget',
'hgetall',
'hincrby',
'hincrbyfloat',
'hkeys',
'hlen',
'hmget',
'hmset',
'hset',
'hsetnx',
'hvals',
'hscan',
'blpop',
'brpop',
'brpoplpush',
'lindex',
'linsert',
'llen',
'lpop',
'lpush',
'lpushx',
'lrange',
'lrem',
'lset',
'ltrim',
'rpop',
'rpoplpush',
'rpush',
'rpushx',
'sadd',
'scard',
'sdiff',
'sdiffstore',
'sinter',
'sinterstore',
'sismember',
'smembers',
'smove',
'spop',
'srandmember',
'srem',
'sunion',
'sunionstore',
'sscan',
'zadd',
'zcard',
'zcount',
'zincrby',
'zrange',
'zrangebyscore',
'zrank',
'zrem',
'zremrangebyrank',
'zremrangebyscore',
'zrevrange',
'zrevrangebyscore',
'zrevrank',
'zscore',
'zunionstore',
'zinterstore',
'zscan',
'zrangebylex',
'zlexcount',
'zremrangebylex',
'pfadd',
'pfcount',
'pfmerge',
'geoadd',
'geopos',
'geodist',
'georadius',
'georadiusbymember',
'geohash',
'psubscribe',
'publish',
'pubsub',
'punsubscribe',
'subscribe',
'unsubscribe',
'discard',
'exec',
'multi',
'unwatch',
'watch',
'auth',
'echo',
'ping',
'quit',
'select');
	public function __construct($host="",$port=""){
		//连接本地的 Redis 服务
		$this->redis = new Redis();
		$host	= empty($host)?C("REDIS_HOST"):$host;
		$port	= empty($port)?C("REDIS_PORT"):$port;
		$port	= !empty($port)?$port:'6379';
		$this->redis->pconnect($host, $port);
	}
	
	public   function __call($method,$arg){
		$argsstr =  implode("','", $arg);
		$rs = 0;
		if(in_array(strtolower($method), $this->CMD)){
			$str = "\$rs = \$this->redis->$method('$argsstr');";
			eval($str);
		}
		return $rs;
	}
}